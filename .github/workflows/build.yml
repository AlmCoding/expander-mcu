name: Build MCU Project

on:
  push:
    branches:
      - main
      - 'V*.*.*'
    tags:
      - 'V*.*.*'
  pull_request:
    branches:
      - main
      - 'V*.*.*'

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      LINK_PYTHON_CMD: "ln -s /usr/bin/python3 /usr/bin/python"
      COMMON_BUILD_CMD: "stm32cubeide --launcher.suppressErrors -nosplash -application org.eclipse.cdt.managedbuilder.core.headlessbuild -data ./workspace -import ./ExpanderFw"

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          submodules: 'true'

      - name: Prepare Docker
        run: |
          docker pull xanderhendriks/stm32cubeide:13.1

      - name: Prepare Build
        run: |
          pwd
          ls -la
          python --version
          python ExpanderFw/generate_git_info.py ExpanderFw/App/git_info.hpp

      - name: Build Debug
        run: |
          docker run --rm \
            -v ${{ github.workspace }}:/workspace \
            -w /workspace \
            xanderhendriks/stm32cubeide:13.1 \
            bash -c "${{ env.COMMON_BUILD_CMD }} -cleanBuild ExpanderFw/Debug"

      - name: Build Release
        run: |
          docker run --rm \
            -v ${{ github.workspace }}:/workspace \
            -w /workspace/ \
            xanderhendriks/stm32cubeide:13.1 \
            bash -c "${{ env.COMMON_BUILD_CMD }} -cleanBuild ExpanderFw/Release"

      - name: Upload Debug Artifact
        uses: actions/upload-artifact@v4
        with:
          path: |
            ./ExpanderFw/Debug/ExpanderFw.hex
            ./ExpanderFw/Debug/ExpanderFw.bin
            ./ExpanderFw/Debug/ExpanderFw.elf
            ./ExpanderFw/Release/ExpanderFw.hex
            ./ExpanderFw/Release/ExpanderFw.bin
            ./ExpanderFw/Release/ExpanderFw.elf

  release:
    runs-on: ubuntu-latest
    needs: build
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./ExpanderFw/Release/ExpanderFw.hex
          asset_name: ExpanderFw.hex
          asset_content_type: application/octet-stream

      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./ExpanderFw/Release/ExpanderFw.bin
          asset_name: ExpanderFw.bin
          asset_content_type: application/octet-stream

      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./ExpanderFw/Release/ExpanderFw.elf
          asset_name: ExpanderFw.elf
          asset_content_type: application/octet-stream
