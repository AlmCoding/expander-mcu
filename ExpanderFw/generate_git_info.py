#!/usr/bin/env python3

import os
import subprocess
import sys

def get_git_info():
    try:
        # Get the current branch name
        branch_name = subprocess.check_output(
            ["git", "rev-parse", "--abbrev-ref", "HEAD"],
            stderr=subprocess.STDOUT
        ).strip().decode('utf-8')

        # Get the current commit hash
        commit_hash = subprocess.check_output(
            ["git", "rev-parse", "HEAD"],
            stderr=subprocess.STDOUT
        ).strip().decode('utf-8')

        # Get the last commit message
        commit_message = subprocess.check_output(
            ["git", "log", "-1", "--pretty=%B"],
            stderr=subprocess.STDOUT
        ).strip().decode('utf-8')

        return branch_name, commit_hash, commit_message
    except subprocess.CalledProcessError as e:
        print("Error while getting git information:", e.output.decode('utf-8'))
        return None, None, None

def generate_git_info_header(branch_name, commit_hash, commit_message):
    commit_message = commit_message.replace('\n', '\\n').replace('"', '\\"')
    header_content = f"""// This file is generated by generate_git_info.py
#pragma once

#define GIT_BRANCH_NAME "{branch_name}"
#define GIT_COMMIT_HASH "{commit_hash}"
#define GIT_COMMIT_MESSAGE "{commit_message}"
"""
    return header_content

def write_git_info_file(filename, content):
    with open(filename, 'w') as f:
        f.write(content)
    print(f"Generated {filename} successfully.")

def main():
    if len(sys.argv) != 2:
        print("Usage: python generate_git_info.py <relative_path/git_info.hpp>")
        sys.exit(1)

    output_path = sys.argv[1]
    branch_name, commit_hash, commit_message = get_git_info()
    
    if branch_name and commit_hash:
        git_info_content = generate_git_info_header(branch_name, commit_hash, commit_message)
        # Ensure the output directory exists
        os.makedirs(os.path.dirname(output_path), exist_ok=True)
        write_git_info_file(output_path, git_info_content)

if __name__ == "__main__":
    main()
